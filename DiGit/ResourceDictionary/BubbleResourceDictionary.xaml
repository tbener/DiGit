<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="BubbleBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background">
            <Setter.Value>
                <RadialGradientBrush RadiusX="1" RadiusY="1">
                    <GradientStop Color="#FF88CBF1" Offset="0.539"/>
                    <GradientStop Color="#FFDCE8EC" Offset="0"/>
                </RadialGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="CornerRadius" Value="0,0,48,48"/>
        <Setter Property="BorderThickness" Value="2,0,2,2"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderBrush" Value="#FF1A67A8"/>

        <!--<Style.Triggers>
            <DataTrigger Binding="{Binding IsShowMenu}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{DynamicResource ShowMenuStoryboard}"/>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard Storyboard="{DynamicResource HideMenuStoryboard}"/>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>-->
    </Style>

    <Style x:Key="BranchTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FF1F1E3A"/>
        <Setter Property="FontSize" Value="18.667"/>
        <Setter Property="FontFamily" Value="Constantia"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>

    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#E7E8EC" />
    <SolidColorBrush x:Key="SolidBorderBrush" Color="#CCCEDB" />
    <Color x:Key="DropShadowColor">#808080</Color>

    <!-- SimpleStyles: MenuItem -->

    <Style x:Key="SeparatorStyleKey" TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="0,4,0,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderBrush="#888888" BorderThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TopLevelHeader -->

    <ControlTemplate x:Key="TopLevelHeaderTemplateKey" TargetType="{x:Type MenuItem}">
        <Border Name="Border" >
            <Grid>
                <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
                <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                    <Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="#FFFFFF" BorderBrush="#888888" BorderThickness="1" >
                        <StackPanel  IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#C0C0C0"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4"/>
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#888888"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- TopLevelItem -->

    <ControlTemplate x:Key="TopLevelItemTemplateKey" TargetType="{x:Type MenuItem}">
        <Border Name="Border" >
            <Grid>
                <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#C0C0C0"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#888888"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuItem -->

    <ControlTemplate x:Key="SubmenuItemTemplateKey" TargetType="{x:Type MenuItem}">
        <Border Name="Border" BorderThickness="2" CornerRadius="14" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <!--<ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>-->
                    <ColumnDefinition Width="*" />
                    <!--<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>-->
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <!--<ContentPresenter Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>-->
                <Border Name="Check"  Width="13" Height="13" Visibility="Collapsed" Margin="6,0,6,0" Background="#C0C0C0" BorderThickness="1" BorderBrush="#404040">
                    <Path Name="CheckMark" Width="7" Height="7" Visibility="Hidden" SnapsToDevicePixels="False" Stroke="#404040" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                </Border>
                <ContentPresenter Name="HeaderHost" Grid.Column="0" ContentSource="Header" RecognizesAccessKey="True"/>
                <!--<TextBlock x:Name="InputGestureText" Grid.Column="1" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" DockPanel.Dock="Right" />-->
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <!--<Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>-->
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                <!--<Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>-->
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#DDDDDD"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#888888"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuHeader
    
    Menu item
    Menu item > (header)
        |
        - > popup
    -->



    <!-- MenuItem Style -->

    <Style x:Key="MenuItemCommandStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Style.Triggers>
            <!--<Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource TopLevelHeaderTemplateKey}"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource TopLevelItemTemplateKey}"/>
            </Trigger>-->
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource SubmenuHeaderTemplateKey}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource SubmenuItemTemplateKey}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ContextMenuCommandsStyle" TargetType="{x:Type ContextMenu}">
        <!--<Setter Property="FontSize" Value="16"/>-->
        <!--<Setter Property="FontWeight" Value="Bold"/>-->
        <!--<Setter Property="Margin" Value="0,0,0,8"/>-->
        <Setter Property="ItemContainerStyle" Value="{StaticResource MenuItemCommandStyle}"></Setter>
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="RenderOptions.ClearTypeHint"
                Value="Enabled" />
        <Setter Property="TextOptions.TextFormattingMode"
                Value="Ideal" />
        <Setter Property="Background" Value="SkyBlue" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BorderBrush" Value="SteelBlue" />
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Grid.IsSharedSizeScope"
                Value="True" />
        <Setter Property="HasDropShadow"
                Value="True" />
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
        <Setter Property="FontSize" Value="{DynamicResource ContextMenuFontSize}" />
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
        <Setter Property="Foreground" Value="SlateGray" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Grid>
                        <Rectangle x:Name="LayoutRoot"
                                   Fill="{TemplateBinding Background}" />
                        <Border x:Name="Border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">

                            <ScrollViewer x:Name="SubMenuScrollViewer"
                                          CanContentScroll="True"
                                          Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                Grid.IsSharedSizeScope="True"
                                                Margin="0"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                KeyboardNavigation.TabNavigation="Cycle" />
                            </ScrollViewer>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow"
                                 Value="True">
                            <Setter TargetName="LayoutRoot" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="SlateGray"
                                                      BlurRadius="4"
                                                      ShadowDepth="2"
                                                      Direction="315"
                                                      Opacity="0.3" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="LayoutRoot"
                                    Property="Margin"
                                    Value="0,0,6,6" />
                            <Setter TargetName="Border"
                                    Property="Margin"
                                    Value="0,0,6,6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Resources>
            <Style TargetType="MenuItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">

                            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" UseLayoutRounding="True" >
                                <Grid x:Name="Grid" Margin="-1" UseLayoutRounding="True" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                                        <ColumnDefinition Width="13"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="30"/>
                                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                                        <ColumnDefinition Width="20"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="True" VerticalAlignment="Center" Width="16" />
                                    <Border x:Name="GlyphPanel" BorderBrush="#FF26A0DA" BorderThickness="1" Background="#3D26A0DA" Height="22" Margin="-1,0,0,0" UseLayoutRounding="True" Visibility="Hidden" VerticalAlignment="Center" Width="22" >
                                        <Path x:Name="Glyph" Data="{DynamicResource ť}" Fill="#FF212121" FlowDirection="LeftToRight" Height="11" UseLayoutRounding="True" Width="9" />
                                    </Border>
                                    <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="True" VerticalAlignment="Center" />
                                    <TextBlock x:Name="TextBlock" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" UseLayoutRounding="True" VerticalAlignment="Center" />
                                    <Path x:Name="RightArrow" Grid.Column="5" Data="M0,0L4,3.5 0,7z" Fill="#FF212121" HorizontalAlignment="Left" Margin="10,0,0,0" UseLayoutRounding="True" VerticalAlignment="Center" />
                                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-3">
                                        <Border CornerRadius="5" x:Name="SubMenuBorder" BorderBrush="#FF999999" BorderThickness="1" Background="#FFF0F0F0" Padding="2" UseLayoutRounding="True" >
                                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" UseLayoutRounding="True" >
                                                <Grid x:Name="Grid1" RenderOptions.ClearTypeHint="Enabled" UseLayoutRounding="True" >
                                                    <Canvas x:Name="Canvas" HorizontalAlignment="Left" Height="0" UseLayoutRounding="True" VerticalAlignment="Top" Width="0" >
                                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="Auto" UseLayoutRounding="True" Width="Auto" />
                                                    </Canvas>
                                                    <Rectangle x:Name="Rectangle" Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" HorizontalAlignment="Left" Margin="29,2,0,2" UseLayoutRounding="True" Width="1" />
                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" UseLayoutRounding="True" />
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Popup>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSuspendingPopupAnimation" Value="True"/>
                                <Trigger Property="Icon" Value="{x:Null}">
                                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                                    <Setter Property="Fill" TargetName="Glyph" Value="#FF707070"/>
                                    <Setter Property="Fill" TargetName="RightArrow" Value="#FF707070"/>
                                </Trigger>
                                <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </Style.Resources>-->


    </Style>

    <!--<Style x:Key="MenuItemCommandStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="Gray"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontSize" Value="13"></Setter>
        <Setter Property="FontFamily" Value="Verdana"></Setter>
        <Setter Property="Margin" Value="-5,0,0,0"></Setter>
        <Style.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="Black"></Setter>
                <Setter Property="FontSize" Value="15"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="LightGray"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>-->





    <ControlTemplate x:Key="SubmenuHeaderTemplateKey" TargetType="{x:Type MenuItem}">
        <Border Name="Border" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <!--<ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>-->
                    <ColumnDefinition Width="*" />
                    <!--<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>-->
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <!--<ContentPresenter Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>-->
                <ContentPresenter Name="HeaderHost" Grid.Column="0" ContentSource="Header" RecognizesAccessKey="True"/>
                <!--<TextBlock x:Name="InputGestureText" Grid.Column="1" Text="{TemplateBinding InputGestureText}" Margin="5,2,2,2" DockPanel.Dock="Right"/>-->
                <Path Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="#404040" />
                <Popup Name="Popup" Placement="Right" HorizontalOffset="-4" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                    <Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="#FFFFFF" BorderBrush="#888888" BorderThickness="1" >
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <!--<Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>-->
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#DDDDDD"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4"/>
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#888888"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="SubmenuItemTemplate" TargetType="{x:Type MenuItem}">
        <Grid>
            <Grid.ColumnDefinitions>
                <!--<ColumnDefinition Width="30" SharedSizeGroup="Icon"/>-->
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <!--<ContentPresenter Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>-->
            <!--<Border Name="Check"  Width="13" Height="13" Visibility="Collapsed" Margin="6,0,6,0" Background="#C0C0C0" BorderThickness="1" BorderBrush="#404040">
                <Path Name="CheckMark" Width="7" Height="7" Visibility="Hidden" SnapsToDevicePixels="False" Stroke="#404040" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" />
            </Border>-->
            <Border Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" BorderThickness="0" BorderBrush="Gray" CornerRadius="2" Background="White">
                <ContentPresenter Name="HeaderHost" HorizontalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True"/>
            </Border>
            <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" DockPanel.Dock="Right" />
        </Grid>
    </ControlTemplate>

    <ItemsPanelTemplate x:Key="MenuItemPanelTemplate">
        <StackPanel Background="White" />
        <!--<StackPanel >
            <StackPanel.Background>
                <RadialGradientBrush RadiusX="1" RadiusY="1">
                    <GradientStop Color="#FF55B9FF" Offset="0.655"/>
                    <GradientStop Color="#FFECEDEE" Offset="0"/>
                </RadialGradientBrush>
            </StackPanel.Background>
        </StackPanel>-->
    </ItemsPanelTemplate>

    <Style x:Key="MenuItemStyleTest" TargetType="{x:Type MenuItem}">
        <Setter Property="Template" Value="{StaticResource SubmenuItemTemplate}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="#FF1F1E3A"/>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="FontWeight" Value="Bold"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="LightGray"></Setter>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource SubmenuHeaderTemplateKey}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ContextMenuCommandsStyleTest" TargetType="{x:Type ContextMenu}">
        <Setter Property="ItemsPanel" Value="{StaticResource MenuItemPanelTemplate}"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource MenuItemStyleTest}"/>
        <!--<Setter Property="BorderBrush" Value="Black"/>-->
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="160" />
        <!--<Setter Property="Margin" Value="20,50,20,0"/>-->
        <Setter Property="Background" Value="Transparent" />
        <!--<Setter Property="Background">
            <Setter.Value>
                <RadialGradientBrush RadiusX="1" RadiusY="1">
                    <GradientStop Color="#FF55B9FF" Offset="0.655"/>
                    <GradientStop Color="#FFECEDEE" Offset="0"/>
                </RadialGradientBrush>
            </Setter.Value>
        </Setter>-->
    </Style>

    <ControlTemplate x:Key="GroupBoxBubbleVisualSettingsControlTemplate" TargetType="{x:Type GroupBox}">
        <GroupBox Header="Transparency">
            <Slider x:Name="SliderOpacity" Value="{Binding BubbleOpacity}" Width="190" Minimum="0.3" Maximum="1" LargeChange="0.1" TickFrequency="0.1" AutoToolTipPlacement="BottomRight" AutoToolTipPrecision="2" TickPlacement="TopLeft" />
        </GroupBox>
    </ControlTemplate>

    <ControlTemplate x:Key="MenuItemBubbleVisualSettingsControlTemplate" TargetType="{x:Type MenuItem}">
        <GroupBox Margin="20,0" HorizontalAlignment="Left" Template="{DynamicResource GroupBoxBubbleVisualSettingsControlTemplate}"/>
    </ControlTemplate>

</ResourceDictionary>